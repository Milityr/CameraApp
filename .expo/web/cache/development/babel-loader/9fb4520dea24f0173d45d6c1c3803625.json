{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Milityr\\\\Desktop\\\\Aplikacje z Piotrkiem\\\\cameraApp\\\\components\\\\CameraScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport * as Permissions from \"expo-permissions\";\nimport { Camera } from 'expo-camera';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport * as MediaLibrary from \"expo-media-library\";\nimport Circlebutton from \"./CircleButton\";\nimport BackHandler from \"react-native-web/dist/exports/BackHandler\";\nimport gear from \"./gear.png\";\nimport front from \"./front.png\";\nimport cam from \"./cam.png\";\nimport RadioGroup from \"./radioGroup\";\nimport ToastAndroid from \"react-native-web/dist/exports/ToastAndroid\";\n\nvar CameraScreen = function (_Component) {\n  _inherits(CameraScreen, _Component);\n\n  var _super = _createSuper(CameraScreen);\n\n  function CameraScreen(props) {\n    var _this;\n\n    _classCallCheck(this, CameraScreen);\n\n    _this = _super.call(this, props);\n\n    _this.getSizes = function _callee() {\n      var sizes;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!_this.camera) {\n                _context.next = 6;\n                break;\n              }\n\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(_this.camera.getAvailablePictureSizesAsync(\"16:9\"));\n\n            case 3:\n              sizes = _context.sent;\n              console.log(_this.state.psl);\n\n              _this.setState({\n                psl: sizes\n              });\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.photo = function _callee2() {\n      var foto, asset;\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              if (!_this.camera) {\n                _context2.next = 7;\n                break;\n              }\n\n              _context2.next = 3;\n              return _regeneratorRuntime.awrap(_this.camera.takePictureAsync());\n\n            case 3:\n              foto = _context2.sent;\n              _context2.next = 6;\n              return _regeneratorRuntime.awrap(MediaLibrary.createAssetAsync(foto.uri));\n\n            case 6:\n              asset = _context2.sent;\n\n            case 7:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.setPermissions = function _callee3() {\n      var _await$Permissions$as, status;\n\n      return _regeneratorRuntime.async(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return _regeneratorRuntime.awrap(Permissions.askAsync(Permissions.CAMERA));\n\n            case 2:\n              _await$Permissions$as = _context3.sent;\n              status = _await$Permissions$as.status;\n\n              _this.setState({\n                hasCameraPermission: status == 'granted'\n              });\n\n            case 5:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.handleBackPress = function () {\n      _this.props.route.params();\n\n      _this.props.navigation.goBack();\n\n      return true;\n    };\n\n    _this.state = {\n      pos: new Animated.Value(-550),\n      wb: \"auto\",\n      ps: \"640x360\",\n      psl: []\n    };\n    _this.frontback = _this.frontback.bind(_assertThisInitialized(_this));\n    _this.getSizes = _this.getSizes.bind(_assertThisInitialized(_this));\n    _this.photo = _this.photo.bind(_assertThisInitialized(_this));\n    _this.toggle = _this.toggle.bind(_assertThisInitialized(_this));\n    _this.isHidden = true;\n    return _this;\n  }\n\n  _createClass(CameraScreen, [{\n    key: \"frontback\",\n    value: function frontback() {\n      this.setState({\n        type: this.state.type === Camera.Constants.Type.back ? Camera.Constants.Type.front : Camera.Constants.Type.back\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setPermissions();\n      BackHandler.addEventListener('hardwareBackPress', this.handleBackPress);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      BackHandler.removeEventListener('hardwareBackPress', this.handleBackPress);\n    }\n  }, {\n    key: \"toggle\",\n    value: function toggle() {\n      var toPos = -300;\n      {\n        console.log(\"This :\" + this.state.psl);\n      }\n\n      if (this.isHidden == true) {\n        this.isHidden = false;\n      } else {\n        toPos = -550;\n        this.isHidden = true;\n      }\n\n      Animated.spring(this.state.pos, {\n        toValue: toPos,\n        velocity: 1,\n        tension: 0,\n        friction: 10,\n        useNativeDriver: true\n      }).start();\n    }\n  }, {\n    key: \"radioClick\",\n    value: function radioClick(x) {\n      this.setState({\n        ps: x\n      });\n      ToastAndroid.show(x, ToastAndroid.SHORT);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var hasCameraPermission = this.state.hasCameraPermission;\n\n      if (hasCameraPermission == null) {\n        return React.createElement(View, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 20\n          }\n        });\n      } else if (hasCameraPermission == false) {\n        return React.createElement(Text, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 20\n          }\n        }, \"brak dost\\u0119pu do kamery\");\n      } else {\n        return React.createElement(View, {\n          View: true,\n          style: {\n            flex: 1\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 17\n          }\n        }, React.createElement(Camera, {\n          onCameraReady: this.getSizes,\n          ref: function ref(_ref) {\n            _this2.camera = _ref;\n          },\n          style: {\n            flex: 1\n          },\n          whiteBalance: this.state.wb,\n          pictureSize: this.state.ps,\n          type: this.state.type,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 21\n          }\n        }, React.createElement(View, {\n          style: {\n            flex: 1\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 25\n          }\n        }, React.createElement(Animated.View, {\n          style: [styles.animatedView, {\n            transform: [{\n              translateX: this.state.pos\n            }]\n          }],\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 29\n          }\n        }, React.createElement(View, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 33\n          }\n        }, React.createElement(RadioGroup, {\n          title: \"Photo Size\",\n          data: this.state.psl,\n          function: this.radioClick,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 37\n          }\n        })))), React.createElement(View, {\n          style: {\n            flex: 1,\n            flexDirection: \"row\",\n            alignItems: \"flex-end\",\n            justifyContent: \"center\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 25\n          }\n        }, React.createElement(Circlebutton, {\n          Prop1: \"Front/Back\",\n          Prop2: front,\n          function: this.frontback,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 29\n          }\n        }), React.createElement(Circlebutton, {\n          Prop1: \"Photo\",\n          Prop2: cam,\n          function: this.photo,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 29\n          }\n        }), React.createElement(Circlebutton, {\n          Prop1: \"Settings\",\n          Prop2: gear,\n          function: this.toggle,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 29\n          }\n        }))));\n      }\n    }\n  }]);\n\n  return CameraScreen;\n}(Component);\n\nvar styles = StyleSheet.create({\n  animatedView: {\n    position: \"absolute\",\n    bottom: -420,\n    left: 300,\n    right: 0,\n    backgroundColor: \"#9f1300\",\n    height: 830,\n    width: 240,\n    opacity: 0.5\n  }\n});\nexport default CameraScreen;","map":{"version":3,"sources":["C:/Users/Milityr/Desktop/Aplikacje z Piotrkiem/cameraApp/components/CameraScreen.js"],"names":["React","Component","Permissions","Camera","MediaLibrary","Circlebutton","gear","front","cam","RadioGroup","CameraScreen","props","getSizes","camera","getAvailablePictureSizesAsync","sizes","console","log","state","psl","setState","photo","takePictureAsync","foto","createAssetAsync","uri","asset","setPermissions","askAsync","CAMERA","status","hasCameraPermission","handleBackPress","route","params","navigation","goBack","pos","Animated","Value","wb","ps","frontback","bind","toggle","isHidden","type","Constants","Type","back","BackHandler","addEventListener","removeEventListener","toPos","spring","toValue","velocity","tension","friction","useNativeDriver","start","x","ToastAndroid","show","SHORT","flex","ref","styles","animatedView","transform","translateX","radioClick","flexDirection","alignItems","justifyContent","StyleSheet","create","position","bottom","left","right","backgroundColor","height","width","opacity"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { View, Text, Image, StyleSheet, Button } from 'react-native';\r\nimport * as Permissions from \"expo-permissions\";\r\nimport { Camera } from 'expo-camera';\r\nimport { Animated } from \"react-native\";\r\nimport * as MediaLibrary from \"expo-media-library\";\r\nimport Circlebutton from './CircleButton';\r\nimport { BackHandler } from \"react-native\";\r\nimport gear from './gear.png';\r\nimport front from './front.png';\r\nimport cam from './cam.png';\r\nimport RadioGroup from './radioGroup';\r\nimport { ToastAndroid } from 'react-native';\r\nclass CameraScreen extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            pos: new Animated.Value(-550),\r\n            wb: \"auto\",\r\n            ps: \"640x360\",\r\n            psl: []\r\n        };\r\n        this.frontback = this.frontback.bind(this)\r\n        this.getSizes = this.getSizes.bind(this)\r\n        this.photo = this.photo.bind(this)\r\n        this.toggle = this.toggle.bind(this)\r\n        this.isHidden = true\r\n\r\n    }\r\n    frontback() {\r\n        this.setState({\r\n            type: this.state.type === Camera.Constants.Type.back\r\n                ? Camera.Constants.Type.front\r\n                : Camera.Constants.Type.back,\r\n        });\r\n    }\r\n    getSizes = async () => {\r\n        if (this.camera) {\r\n            const sizes = await this.camera.getAvailablePictureSizesAsync(\"16:9\")\r\n            //this.state.psl = sizes\r\n\r\n            //alert(JSON.stringify(sizes, null, 4))\r\n            console.log(this.state.psl)\r\n            this.setState({ psl: sizes })\r\n        }\r\n    };\r\n    photo = async () => {\r\n\r\n        if (this.camera) {\r\n            let foto = await this.camera.takePictureAsync();\r\n            let asset = await MediaLibrary.createAssetAsync(foto.uri); // domyslnie zapisuje w folderze DCIM\r\n            //alert(JSON.stringify(asset, null, 4))\r\n        }\r\n\r\n\r\n    }\r\n    setPermissions = async () => {\r\n\r\n        let { status } = await Permissions.askAsync(Permissions.CAMERA);\r\n        this.setState({ hasCameraPermission: status == 'granted' });\r\n\r\n    }\r\n    componentDidMount() {\r\n\r\n        this.setPermissions()\r\n        BackHandler.addEventListener('hardwareBackPress', this.handleBackPress);\r\n\r\n\r\n    }\r\n    componentWillUnmount() {\r\n        BackHandler.removeEventListener('hardwareBackPress', this.handleBackPress);\r\n    }\r\n    handleBackPress = () => {\r\n\r\n        this.props.route.params()\r\n        this.props.navigation.goBack()\r\n        return true;\r\n    }\r\n    toggle() {\r\n        let toPos = -300\r\n        { console.log(\"This :\" + this.state.psl) }\r\n        if (this.isHidden == true) {\r\n\r\n            this.isHidden = false\r\n        }\r\n        else {\r\n            toPos = -550\r\n            this.isHidden = true\r\n        }//else toPos = 100\r\n        //animacja\r\n\r\n        Animated.spring(\r\n            this.state.pos,\r\n            {\r\n                toValue: toPos,\r\n                velocity: 1,\r\n                tension: 0,\r\n                friction: 10,\r\n                useNativeDriver: true\r\n            }\r\n        ).start();\r\n\r\n    }\r\n    radioClick(x) {\r\n        this.setState({ ps: x })\r\n        ToastAndroid.show(x, ToastAndroid.SHORT)\r\n    }\r\n    render() {\r\n\r\n        const { hasCameraPermission } = this.state; // podstawienie zmiennej ze state\r\n        if (hasCameraPermission == null) {\r\n            return <View />;\r\n        } else if (hasCameraPermission == false) {\r\n            return <Text>brak dostępu do kamery</Text>;\r\n        } else {\r\n\r\n            return (\r\n\r\n                <View View style={{ flex: 1 }\r\n                }>\r\n                    <Camera\r\n                        onCameraReady={this.getSizes}\r\n                        ref={ref => {\r\n                            this.camera = ref; // Uwaga: referencja do kamery używana później\r\n                        }}\r\n                        style={{ flex: 1 }}\r\n                        whiteBalance={this.state.wb}\r\n                        pictureSize={this.state.ps}\r\n                        type={this.state.type}>\r\n                        <View style={{ flex: 1, }}>\r\n                            <Animated.View\r\n                                style={[\r\n                                    styles.animatedView,\r\n                                    {\r\n                                        transform: [\r\n                                            { translateX: this.state.pos }\r\n                                        ]\r\n                                    }]} >\r\n                                <View>\r\n\r\n                                    {/* {console.log(Camera.whiteBalance)}\r\n                                    <RadioGroup\r\n                                        title=\"White Balance\"\r\n                                        data={[0, 1, 2, 3, 4, 5]}\r\n                                        value={[]}\r\n                                    /> */}\r\n\r\n                                    <RadioGroup\r\n                                        title=\"Photo Size\"\r\n                                        data={this.state.psl}\r\n                                        //value={[this.state.psl]}\r\n                                        function={this.radioClick}\r\n                                    />\r\n                                </View>\r\n\r\n                            </Animated.View>\r\n                        </View>\r\n                        <View style={{ flex: 1, flexDirection: \"row\", alignItems: \"flex-end\", justifyContent: \"center\" }}>\r\n                            <Circlebutton Prop1=\"Front/Back\" Prop2={front} function={this.frontback}></Circlebutton>\r\n                            <Circlebutton Prop1=\"Photo\" Prop2={cam} function={this.photo} ></Circlebutton>\r\n                            <Circlebutton Prop1=\"Settings\" Prop2={gear} function={this.toggle} ></Circlebutton>\r\n                            {/* tutaj wstaw buttony do obsługi kamery, które widać na filmie*/}\r\n\r\n                        </View>\r\n\r\n                    </Camera>\r\n                </View >\r\n            );\r\n        }\r\n    }\r\n}\r\nvar styles = StyleSheet.create({\r\n\r\n    animatedView: {\r\n        // alignItems: \"flex-end\",\r\n        position: \"absolute\",\r\n        bottom: -420,\r\n        left: 300,\r\n        right: 0,\r\n        backgroundColor: \"#9f1300\",\r\n        height: 830,\r\n        width: 240,\r\n        opacity: 0.5\r\n    }\r\n});\r\nexport default CameraScreen;\r\n"]},"metadata":{},"sourceType":"module"}