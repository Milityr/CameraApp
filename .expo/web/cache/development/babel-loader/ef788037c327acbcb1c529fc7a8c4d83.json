{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Milityr\\\\Desktop\\\\Aplikacje z Piotrkiem\\\\cameraApp\\\\components\\\\CircleButton.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport PropTypes from 'prop-types';\n\nvar CircleButton = function (_Component) {\n  _inherits(CircleButton, _Component);\n\n  var _super = _createSuper(CircleButton);\n\n  function CircleButton(props) {\n    var _this;\n\n    _classCallCheck(this, CircleButton);\n\n    _this = _super.call(this, props);\n    _this.state = {};\n    _this.click = _this.click.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(CircleButton, [{\n    key: \"click\",\n    value: function click() {\n      if (this.props.Prop1 == \"Front/Back\") {\n        this.props.function();\n      } else if (this.props.Prop1 == \"Photo\") {\n        this.props.function();\n      } else if (this.props.Prop1 == \"Settings\") {\n        this.props.function();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }\n      }, React.createElement(TouchableOpacity, {\n        style: styles.button,\n        onPress: this.click,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 17\n        }\n      }, React.createElement(Image, {\n        style: {\n          width: 80,\n          height: 80\n        },\n        source: this.props.Prop2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 78\n        }\n      })));\n    }\n  }]);\n\n  return CircleButton;\n}(Component);\n\nCircleButton.propTypes = {\n  Prop1: PropTypes.string.isRequired\n};\nvar styles = StyleSheet.create({\n  button: {\n    alignItems: 'center',\n    width: 80,\n    height: 80,\n    borderRadius: 50\n  }\n});\nexport default CircleButton;","map":{"version":3,"sources":["C:/Users/Milityr/Desktop/Aplikacje z Piotrkiem/cameraApp/components/CircleButton.js"],"names":["React","Component","PropTypes","CircleButton","props","state","click","bind","Prop1","function","styles","button","width","height","Prop2","propTypes","string","isRequired","StyleSheet","create","alignItems","borderRadius"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;;;AAEA,OAAOC,SAAP,MAAsB,YAAtB;;IAEMC,Y;;;;;AACF,wBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,8BAAMA,KAAN;AACA,UAAKC,KAAL,GAAa,EAAb;AAEA,UAAKC,KAAL,GAAa,MAAKA,KAAL,CAAWC,IAAX,+BAAb;AAJe;AAKlB;;;;4BAEO;AACJ,UAAI,KAAKH,KAAL,CAAWI,KAAX,IAAoB,YAAxB,EAAsC;AAClC,aAAKJ,KAAL,CAAWK,QAAX;AACH,OAFD,MAGK,IAAI,KAAKL,KAAL,CAAWI,KAAX,IAAoB,OAAxB,EAAiC;AAClC,aAAKJ,KAAL,CAAWK,QAAX;AACH,OAFI,MAGA,IAAI,KAAKL,KAAL,CAAWI,KAAX,IAAoB,UAAxB,EAAoC;AACrC,aAAKJ,KAAL,CAAWK,QAAX;AACH;AACJ;;;6BAEQ;AACL,aACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,gBAAD;AAAkB,QAAA,KAAK,EAAEC,MAAM,CAACC,MAAhC;AAAwC,QAAA,OAAO,EAAE,KAAKL,KAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA6D,oBAAC,KAAD;AAAO,QAAA,KAAK,EAAE;AAAEM,UAAAA,KAAK,EAAE,EAAT;AAAaC,UAAAA,MAAM,EAAE;AAArB,SAAd;AAAyC,QAAA,MAAM,EAAE,KAAKT,KAAL,CAAWU,KAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAA7D,CADJ,CADJ;AAKH;;;;EA1BsBb,S;;AA4B3BE,YAAY,CAACY,SAAb,GAAyB;AACrBP,EAAAA,KAAK,EAAEN,SAAS,CAACc,MAAV,CAAiBC;AADH,CAAzB;AAGA,IAAMP,MAAM,GAAGQ,UAAU,CAACC,MAAX,CAAkB;AAC7BR,EAAAA,MAAM,EAAE;AACJS,IAAAA,UAAU,EAAE,QADR;AAEJR,IAAAA,KAAK,EAAE,EAFH;AAGJC,IAAAA,MAAM,EAAE,EAHJ;AAKJQ,IAAAA,YAAY,EAAE;AALV;AADqB,CAAlB,CAAf;AAWA,eAAelB,YAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { View, Text, StyleSheet, TouchableOpacity, Image } from 'react-native';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass CircleButton extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n        this.click = this.click.bind(this)\r\n    }\r\n\r\n    click() {\r\n        if (this.props.Prop1 == \"Front/Back\") {\r\n            this.props.function()\r\n        }\r\n        else if (this.props.Prop1 == \"Photo\") {\r\n            this.props.function()\r\n        }\r\n        else if (this.props.Prop1 == \"Settings\") {\r\n            this.props.function()\r\n        }\r\n    }\r\n    // <Text style={{ fontWeight: \"bold\", width: 80, height: 80 }} >{this.props.Prop1}</Text>\r\n    render() {\r\n        return (\r\n            <View>\r\n                <TouchableOpacity style={styles.button} onPress={this.click}><Image style={{ width: 80, height: 80 }} source={this.props.Prop2} /></TouchableOpacity>\r\n            </View>\r\n        );\r\n    }\r\n}\r\nCircleButton.propTypes = {\r\n    Prop1: PropTypes.string.isRequired\r\n};\r\nconst styles = StyleSheet.create({\r\n    button: {\r\n        alignItems: 'center',\r\n        width: 80,\r\n        height: 80,\r\n        // backgroundColor: \"blue\",\r\n        borderRadius: 50,\r\n        //  opacity: 0.3\r\n    },\r\n\r\n});\r\nexport default CircleButton;\r\n"]},"metadata":{},"sourceType":"module"}